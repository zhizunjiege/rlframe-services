// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#include "agent.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace game {
namespace agent {
constexpr AgentConfig_Hook::AgentConfig_Hook(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , args_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AgentConfig_HookDefaultTypeInternal {
  constexpr AgentConfig_HookDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentConfig_HookDefaultTypeInternal() {}
  union {
    AgentConfig_Hook _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentConfig_HookDefaultTypeInternal _AgentConfig_Hook_default_instance_;
constexpr AgentConfig::AgentConfig(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hooks_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , hypers_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sifunc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , oafunc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , rewfunc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , training_(false){}
struct AgentConfigDefaultTypeInternal {
  constexpr AgentConfigDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentConfigDefaultTypeInternal() {}
  union {
    AgentConfig _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentConfigDefaultTypeInternal _AgentConfig_default_instance_;
constexpr AgentMode::AgentMode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : training_(false){}
struct AgentModeDefaultTypeInternal {
  constexpr AgentModeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AgentModeDefaultTypeInternal() {}
  union {
    AgentMode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AgentModeDefaultTypeInternal _AgentMode_default_instance_;
constexpr ModelWeights::ModelWeights(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : weights_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ModelWeightsDefaultTypeInternal {
  constexpr ModelWeightsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelWeightsDefaultTypeInternal() {}
  union {
    ModelWeights _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelWeightsDefaultTypeInternal _ModelWeights_default_instance_;
constexpr ModelBuffer::ModelBuffer(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : buffer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ModelBufferDefaultTypeInternal {
  constexpr ModelBufferDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelBufferDefaultTypeInternal() {}
  union {
    ModelBuffer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelBufferDefaultTypeInternal _ModelBuffer_default_instance_;
constexpr ModelStatus::ModelStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct ModelStatusDefaultTypeInternal {
  constexpr ModelStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ModelStatusDefaultTypeInternal() {}
  union {
    ModelStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ModelStatusDefaultTypeInternal _ModelStatus_default_instance_;
}  // namespace agent
}  // namespace game
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_agent_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_agent_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_agent_2eproto = nullptr;

const uint32_t TableStruct_agent_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig_Hook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig_Hook, name_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig_Hook, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, training_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, name_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, hypers_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, sifunc_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, oafunc_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, rewfunc_),
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentConfig, hooks_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::AgentMode, training_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelWeights, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelWeights, weights_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelBuffer, buffer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::game::agent::ModelStatus, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::game::agent::AgentConfig_Hook)},
  { 8, -1, -1, sizeof(::game::agent::AgentConfig)},
  { 21, -1, -1, sizeof(::game::agent::AgentMode)},
  { 28, -1, -1, sizeof(::game::agent::ModelWeights)},
  { 35, -1, -1, sizeof(::game::agent::ModelBuffer)},
  { 42, -1, -1, sizeof(::game::agent::ModelStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_AgentConfig_Hook_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_AgentConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_AgentMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_ModelWeights_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_ModelBuffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::game::agent::_ModelStatus_default_instance_),
};

const char descriptor_table_protodef_agent_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013agent.proto\022\ngame.agent\032\013types.proto\"\277"
  "\001\n\013AgentConfig\022\020\n\010training\030\001 \001(\010\022\014\n\004name"
  "\030\002 \001(\t\022\016\n\006hypers\030\003 \001(\t\022\016\n\006sifunc\030\004 \001(\t\022\016"
  "\n\006oafunc\030\005 \001(\t\022\017\n\007rewfunc\030\006 \001(\t\022+\n\005hooks"
  "\030\007 \003(\0132\034.game.agent.AgentConfig.Hook\032\"\n\004"
  "Hook\022\014\n\004name\030\001 \001(\t\022\014\n\004args\030\002 \001(\t\"\035\n\tAgen"
  "tMode\022\020\n\010training\030\001 \001(\010\"\037\n\014ModelWeights\022"
  "\017\n\007weights\030\001 \001(\014\"\035\n\013ModelBuffer\022\016\n\006buffe"
  "r\030\001 \001(\014\"\035\n\013ModelStatus\022\016\n\006status\030\001 \001(\t2\302"
  "\007\n\005Agent\022E\n\014ResetService\022\031.game.types.Co"
  "mmonRequest\032\032.game.types.CommonResponse\022"
  "C\n\014QueryService\022\031.game.types.CommonReque"
  "st\032\030.game.types.ServiceState\022D\n\016GetAgent"
  "Config\022\031.game.types.CommonRequest\032\027.game"
  ".agent.AgentConfig\022E\n\016SetAgentConfig\022\027.g"
  "ame.agent.AgentConfig\032\032.game.types.Commo"
  "nResponse\022@\n\014GetAgentMode\022\031.game.types.C"
  "ommonRequest\032\025.game.agent.AgentMode\022A\n\014S"
  "etAgentMode\022\025.game.agent.AgentMode\032\032.gam"
  "e.types.CommonResponse\022F\n\017GetModelWeight"
  "s\022\031.game.types.CommonRequest\032\030.game.agen"
  "t.ModelWeights\022G\n\017SetModelWeights\022\030.game"
  ".agent.ModelWeights\032\032.game.types.CommonR"
  "esponse\022D\n\016GetModelBuffer\022\031.game.types.C"
  "ommonRequest\032\027.game.agent.ModelBuffer\022E\n"
  "\016SetModelBuffer\022\027.game.agent.ModelBuffer"
  "\032\032.game.types.CommonResponse\022D\n\016GetModel"
  "Status\022\031.game.types.CommonRequest\032\027.game"
  ".agent.ModelStatus\022E\n\016SetModelStatus\022\027.g"
  "ame.agent.ModelStatus\032\032.game.types.Commo"
  "nResponse\022<\n\tGetAction\022\024.game.types.SimS"
  "tate\032\025.game.types.SimAction(\0010\001\0222\n\004Call\022"
  "\024.game.types.CallData\032\024.game.types.CallD"
  "atab\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_agent_2eproto_deps[1] = {
  &::descriptor_table_types_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_agent_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_agent_2eproto = {
  false, false, 1331, descriptor_table_protodef_agent_2eproto, "agent.proto", 
  &descriptor_table_agent_2eproto_once, descriptor_table_agent_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_agent_2eproto::offsets,
  file_level_metadata_agent_2eproto, file_level_enum_descriptors_agent_2eproto, file_level_service_descriptors_agent_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_agent_2eproto_getter() {
  return &descriptor_table_agent_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_agent_2eproto(&descriptor_table_agent_2eproto);
namespace game {
namespace agent {

// ===================================================================

class AgentConfig_Hook::_Internal {
 public:
};

AgentConfig_Hook::AgentConfig_Hook(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.AgentConfig.Hook)
}
AgentConfig_Hook::AgentConfig_Hook(const AgentConfig_Hook& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  args_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_args().empty()) {
    args_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_args(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:game.agent.AgentConfig.Hook)
}

inline void AgentConfig_Hook::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
args_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  args_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AgentConfig_Hook::~AgentConfig_Hook() {
  // @@protoc_insertion_point(destructor:game.agent.AgentConfig.Hook)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentConfig_Hook::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  args_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgentConfig_Hook::ArenaDtor(void* object) {
  AgentConfig_Hook* _this = reinterpret_cast< AgentConfig_Hook* >(object);
  (void)_this;
}
void AgentConfig_Hook::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentConfig_Hook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentConfig_Hook::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.AgentConfig.Hook)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  args_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentConfig_Hook::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.Hook.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_args();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.Hook.args"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentConfig_Hook::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.AgentConfig.Hook)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.Hook.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string args = 2;
  if (!this->_internal_args().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_args().data(), static_cast<int>(this->_internal_args().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.Hook.args");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_args(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.AgentConfig.Hook)
  return target;
}

size_t AgentConfig_Hook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.AgentConfig.Hook)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string args = 2;
  if (!this->_internal_args().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_args());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentConfig_Hook::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentConfig_Hook::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentConfig_Hook::GetClassData() const { return &_class_data_; }

void AgentConfig_Hook::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentConfig_Hook *>(to)->MergeFrom(
      static_cast<const AgentConfig_Hook &>(from));
}


void AgentConfig_Hook::MergeFrom(const AgentConfig_Hook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.AgentConfig.Hook)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_args().empty()) {
    _internal_set_args(from._internal_args());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentConfig_Hook::CopyFrom(const AgentConfig_Hook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.AgentConfig.Hook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfig_Hook::IsInitialized() const {
  return true;
}

void AgentConfig_Hook::InternalSwap(AgentConfig_Hook* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &args_, lhs_arena,
      &other->args_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentConfig_Hook::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[0]);
}

// ===================================================================

class AgentConfig::_Internal {
 public:
};

AgentConfig::AgentConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  hooks_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.AgentConfig)
}
AgentConfig::AgentConfig(const AgentConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      hooks_(from.hooks_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  hypers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    hypers_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hypers().empty()) {
    hypers_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_hypers(), 
      GetArenaForAllocation());
  }
  sifunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sifunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sifunc().empty()) {
    sifunc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sifunc(), 
      GetArenaForAllocation());
  }
  oafunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    oafunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_oafunc().empty()) {
    oafunc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_oafunc(), 
      GetArenaForAllocation());
  }
  rewfunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rewfunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rewfunc().empty()) {
    rewfunc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rewfunc(), 
      GetArenaForAllocation());
  }
  training_ = from.training_;
  // @@protoc_insertion_point(copy_constructor:game.agent.AgentConfig)
}

inline void AgentConfig::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
hypers_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  hypers_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
sifunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sifunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
oafunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  oafunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
rewfunc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rewfunc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
training_ = false;
}

AgentConfig::~AgentConfig() {
  // @@protoc_insertion_point(destructor:game.agent.AgentConfig)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hypers_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sifunc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  oafunc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  rewfunc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AgentConfig::ArenaDtor(void* object) {
  AgentConfig* _this = reinterpret_cast< AgentConfig* >(object);
  (void)_this;
}
void AgentConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.AgentConfig)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hooks_.Clear();
  name_.ClearToEmpty();
  hypers_.ClearToEmpty();
  sifunc_.ClearToEmpty();
  oafunc_.ClearToEmpty();
  rewfunc_.ClearToEmpty();
  training_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool training = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          training_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string hypers = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_hypers();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.hypers"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sifunc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sifunc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.sifunc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string oafunc = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_oafunc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.oafunc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rewfunc = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_rewfunc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.AgentConfig.rewfunc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .game.agent.AgentConfig.Hook hooks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_hooks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentConfig::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.AgentConfig)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool training = 1;
  if (this->_internal_training() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_training(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string hypers = 3;
  if (!this->_internal_hypers().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hypers().data(), static_cast<int>(this->_internal_hypers().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.hypers");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_hypers(), target);
  }

  // string sifunc = 4;
  if (!this->_internal_sifunc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sifunc().data(), static_cast<int>(this->_internal_sifunc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.sifunc");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sifunc(), target);
  }

  // string oafunc = 5;
  if (!this->_internal_oafunc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_oafunc().data(), static_cast<int>(this->_internal_oafunc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.oafunc");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_oafunc(), target);
  }

  // string rewfunc = 6;
  if (!this->_internal_rewfunc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rewfunc().data(), static_cast<int>(this->_internal_rewfunc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.AgentConfig.rewfunc");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_rewfunc(), target);
  }

  // repeated .game.agent.AgentConfig.Hook hooks = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_hooks_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_hooks(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.AgentConfig)
  return target;
}

size_t AgentConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.AgentConfig)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .game.agent.AgentConfig.Hook hooks = 7;
  total_size += 1UL * this->_internal_hooks_size();
  for (const auto& msg : this->hooks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string hypers = 3;
  if (!this->_internal_hypers().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hypers());
  }

  // string sifunc = 4;
  if (!this->_internal_sifunc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sifunc());
  }

  // string oafunc = 5;
  if (!this->_internal_oafunc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_oafunc());
  }

  // string rewfunc = 6;
  if (!this->_internal_rewfunc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rewfunc());
  }

  // bool training = 1;
  if (this->_internal_training() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentConfig::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentConfig::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentConfig::GetClassData() const { return &_class_data_; }

void AgentConfig::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentConfig *>(to)->MergeFrom(
      static_cast<const AgentConfig &>(from));
}


void AgentConfig::MergeFrom(const AgentConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.AgentConfig)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  hooks_.MergeFrom(from.hooks_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_hypers().empty()) {
    _internal_set_hypers(from._internal_hypers());
  }
  if (!from._internal_sifunc().empty()) {
    _internal_set_sifunc(from._internal_sifunc());
  }
  if (!from._internal_oafunc().empty()) {
    _internal_set_oafunc(from._internal_oafunc());
  }
  if (!from._internal_rewfunc().empty()) {
    _internal_set_rewfunc(from._internal_rewfunc());
  }
  if (from._internal_training() != 0) {
    _internal_set_training(from._internal_training());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentConfig::CopyFrom(const AgentConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.AgentConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentConfig::IsInitialized() const {
  return true;
}

void AgentConfig::InternalSwap(AgentConfig* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  hooks_.InternalSwap(&other->hooks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &hypers_, lhs_arena,
      &other->hypers_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sifunc_, lhs_arena,
      &other->sifunc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &oafunc_, lhs_arena,
      &other->oafunc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rewfunc_, lhs_arena,
      &other->rewfunc_, rhs_arena
  );
  swap(training_, other->training_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentConfig::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[1]);
}

// ===================================================================

class AgentMode::_Internal {
 public:
};

AgentMode::AgentMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.AgentMode)
}
AgentMode::AgentMode(const AgentMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  training_ = from.training_;
  // @@protoc_insertion_point(copy_constructor:game.agent.AgentMode)
}

inline void AgentMode::SharedCtor() {
training_ = false;
}

AgentMode::~AgentMode() {
  // @@protoc_insertion_point(destructor:game.agent.AgentMode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AgentMode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void AgentMode::ArenaDtor(void* object) {
  AgentMode* _this = reinterpret_cast< AgentMode* >(object);
  (void)_this;
}
void AgentMode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AgentMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AgentMode::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.AgentMode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  training_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AgentMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool training = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          training_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AgentMode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.AgentMode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool training = 1;
  if (this->_internal_training() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_training(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.AgentMode)
  return target;
}

size_t AgentMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.AgentMode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool training = 1;
  if (this->_internal_training() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AgentMode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AgentMode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AgentMode::GetClassData() const { return &_class_data_; }

void AgentMode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AgentMode *>(to)->MergeFrom(
      static_cast<const AgentMode &>(from));
}


void AgentMode::MergeFrom(const AgentMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.AgentMode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_training() != 0) {
    _internal_set_training(from._internal_training());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AgentMode::CopyFrom(const AgentMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.AgentMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentMode::IsInitialized() const {
  return true;
}

void AgentMode::InternalSwap(AgentMode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(training_, other->training_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AgentMode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[2]);
}

// ===================================================================

class ModelWeights::_Internal {
 public:
};

ModelWeights::ModelWeights(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.ModelWeights)
}
ModelWeights::ModelWeights(const ModelWeights& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    weights_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_weights().empty()) {
    weights_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_weights(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:game.agent.ModelWeights)
}

inline void ModelWeights::SharedCtor() {
weights_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  weights_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelWeights::~ModelWeights() {
  // @@protoc_insertion_point(destructor:game.agent.ModelWeights)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelWeights::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  weights_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelWeights::ArenaDtor(void* object) {
  ModelWeights* _this = reinterpret_cast< ModelWeights* >(object);
  (void)_this;
}
void ModelWeights::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelWeights::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelWeights::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.ModelWeights)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelWeights::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes weights = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_weights();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelWeights::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.ModelWeights)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes weights = 1;
  if (!this->_internal_weights().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_weights(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.ModelWeights)
  return target;
}

size_t ModelWeights::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.ModelWeights)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes weights = 1;
  if (!this->_internal_weights().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_weights());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelWeights::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelWeights::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelWeights::GetClassData() const { return &_class_data_; }

void ModelWeights::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelWeights *>(to)->MergeFrom(
      static_cast<const ModelWeights &>(from));
}


void ModelWeights::MergeFrom(const ModelWeights& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.ModelWeights)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_weights().empty()) {
    _internal_set_weights(from._internal_weights());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelWeights::CopyFrom(const ModelWeights& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.ModelWeights)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelWeights::IsInitialized() const {
  return true;
}

void ModelWeights::InternalSwap(ModelWeights* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &weights_, lhs_arena,
      &other->weights_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelWeights::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[3]);
}

// ===================================================================

class ModelBuffer::_Internal {
 public:
};

ModelBuffer::ModelBuffer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.ModelBuffer)
}
ModelBuffer::ModelBuffer(const ModelBuffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  buffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    buffer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_buffer().empty()) {
    buffer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_buffer(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:game.agent.ModelBuffer)
}

inline void ModelBuffer::SharedCtor() {
buffer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  buffer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelBuffer::~ModelBuffer() {
  // @@protoc_insertion_point(destructor:game.agent.ModelBuffer)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelBuffer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  buffer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelBuffer::ArenaDtor(void* object) {
  ModelBuffer* _this = reinterpret_cast< ModelBuffer* >(object);
  (void)_this;
}
void ModelBuffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.ModelBuffer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  buffer_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelBuffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes buffer = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_buffer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelBuffer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.ModelBuffer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (!this->_internal_buffer().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_buffer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.ModelBuffer)
  return target;
}

size_t ModelBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.ModelBuffer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes buffer = 1;
  if (!this->_internal_buffer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_buffer());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelBuffer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelBuffer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelBuffer::GetClassData() const { return &_class_data_; }

void ModelBuffer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelBuffer *>(to)->MergeFrom(
      static_cast<const ModelBuffer &>(from));
}


void ModelBuffer::MergeFrom(const ModelBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.ModelBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_buffer().empty()) {
    _internal_set_buffer(from._internal_buffer());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelBuffer::CopyFrom(const ModelBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.ModelBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelBuffer::IsInitialized() const {
  return true;
}

void ModelBuffer::InternalSwap(ModelBuffer* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &buffer_, lhs_arena,
      &other->buffer_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelBuffer::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[4]);
}

// ===================================================================

class ModelStatus::_Internal {
 public:
};

ModelStatus::ModelStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:game.agent.ModelStatus)
}
ModelStatus::ModelStatus(const ModelStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_status().empty()) {
    status_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_status(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:game.agent.ModelStatus)
}

inline void ModelStatus::SharedCtor() {
status_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  status_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ModelStatus::~ModelStatus() {
  // @@protoc_insertion_point(destructor:game.agent.ModelStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ModelStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  status_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelStatus::ArenaDtor(void* object) {
  ModelStatus* _this = reinterpret_cast< ModelStatus* >(object);
  (void)_this;
}
void ModelStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ModelStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ModelStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:game.agent.ModelStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ModelStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_status();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "game.agent.ModelStatus.status"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ModelStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:game.agent.ModelStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_status().data(), static_cast<int>(this->_internal_status().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "game.agent.ModelStatus.status");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:game.agent.ModelStatus)
  return target;
}

size_t ModelStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:game.agent.ModelStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string status = 1;
  if (!this->_internal_status().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ModelStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ModelStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ModelStatus::GetClassData() const { return &_class_data_; }

void ModelStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ModelStatus *>(to)->MergeFrom(
      static_cast<const ModelStatus &>(from));
}


void ModelStatus::MergeFrom(const ModelStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:game.agent.ModelStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_status().empty()) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ModelStatus::CopyFrom(const ModelStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:game.agent.ModelStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelStatus::IsInitialized() const {
  return true;
}

void ModelStatus::InternalSwap(ModelStatus* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &status_, lhs_arena,
      &other->status_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_agent_2eproto_getter, &descriptor_table_agent_2eproto_once,
      file_level_metadata_agent_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace agent
}  // namespace game
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::game::agent::AgentConfig_Hook* Arena::CreateMaybeMessage< ::game::agent::AgentConfig_Hook >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::AgentConfig_Hook >(arena);
}
template<> PROTOBUF_NOINLINE ::game::agent::AgentConfig* Arena::CreateMaybeMessage< ::game::agent::AgentConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::AgentConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::game::agent::AgentMode* Arena::CreateMaybeMessage< ::game::agent::AgentMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::AgentMode >(arena);
}
template<> PROTOBUF_NOINLINE ::game::agent::ModelWeights* Arena::CreateMaybeMessage< ::game::agent::ModelWeights >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::ModelWeights >(arena);
}
template<> PROTOBUF_NOINLINE ::game::agent::ModelBuffer* Arena::CreateMaybeMessage< ::game::agent::ModelBuffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::ModelBuffer >(arena);
}
template<> PROTOBUF_NOINLINE ::game::agent::ModelStatus* Arena::CreateMaybeMessage< ::game::agent::ModelStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::game::agent::ModelStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
